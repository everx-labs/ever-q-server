"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _utils = require("./utils");

/*
 * Copyright 2018-2020 TON DEV SOLUTIONS LTD.
 *
 * Licensed under the SOFTWARE EVALUATION License (the "License"); you may not use
 * this file except in compliance with the License.  You may obtain a copy of the
 * License at:
 *
 * http://www.ton.dev/licenses
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific TON DEV software governing permissions and
 * limitations under the License.
 */
function toJSON(value) {
  try {
    return JSON.stringify((0, _utils.toLog)(value));
  } catch (error) {
    return JSON.stringify(`${value}`);
  }
}

function str(arg) {
  const s = typeof arg === 'string' ? arg : toJSON(arg);
  return s.split('\n').join('\\n').split('\t').join('\\t');
}

function format(name, args) {
  return `${Date.now()}\t${name}\t${args.map(str).join('\t')}`;
}

class QLogs {
  static error(...args) {
    if (QLogs.stopped) {
      return;
    }

    console.error(...args);
  }

  static debug(...args) {
    if (QLogs.stopped) {
      return;
    }

    console.debug(...args);
  }

  create(name) {
    return {
      error(...args) {
        QLogs.error(...args);
      },

      debug(...args) {
        QLogs.debug(format(name, args));
      }

    };
  }

  stop() {
    QLogs.stopped = true;
  }

}

exports.default = QLogs;
QLogs.stopped = false;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9sb2dzLmpzIl0sIm5hbWVzIjpbInRvSlNPTiIsInZhbHVlIiwiSlNPTiIsInN0cmluZ2lmeSIsImVycm9yIiwic3RyIiwiYXJnIiwicyIsInNwbGl0Iiwiam9pbiIsImZvcm1hdCIsIm5hbWUiLCJhcmdzIiwiRGF0ZSIsIm5vdyIsIm1hcCIsIlFMb2dzIiwic3RvcHBlZCIsImNvbnNvbGUiLCJkZWJ1ZyIsImNyZWF0ZSIsInN0b3AiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFrQkE7O0FBbEJBOzs7Ozs7Ozs7Ozs7Ozs7QUF5QkEsU0FBU0EsTUFBVCxDQUFnQkMsS0FBaEIsRUFBb0M7QUFDaEMsTUFBSTtBQUNBLFdBQU9DLElBQUksQ0FBQ0MsU0FBTCxDQUFlLGtCQUFNRixLQUFOLENBQWYsQ0FBUDtBQUNILEdBRkQsQ0FFRSxPQUFPRyxLQUFQLEVBQWM7QUFDWixXQUFPRixJQUFJLENBQUNDLFNBQUwsQ0FBZ0IsR0FBRUYsS0FBTSxFQUF4QixDQUFQO0FBQ0g7QUFDSjs7QUFFRCxTQUFTSSxHQUFULENBQWFDLEdBQWIsRUFBK0I7QUFDM0IsUUFBTUMsQ0FBQyxHQUFHLE9BQU9ELEdBQVAsS0FBZSxRQUFmLEdBQTBCQSxHQUExQixHQUFnQ04sTUFBTSxDQUFDTSxHQUFELENBQWhEO0FBQ0EsU0FBT0MsQ0FBQyxDQUFDQyxLQUFGLENBQVEsSUFBUixFQUFjQyxJQUFkLENBQW1CLEtBQW5CLEVBQTBCRCxLQUExQixDQUFnQyxJQUFoQyxFQUFzQ0MsSUFBdEMsQ0FBMkMsS0FBM0MsQ0FBUDtBQUNIOztBQUVELFNBQVNDLE1BQVQsQ0FBZ0JDLElBQWhCLEVBQThCQyxJQUE5QixFQUE4QztBQUMxQyxTQUFRLEdBQUVDLElBQUksQ0FBQ0MsR0FBTCxFQUFXLEtBQUlILElBQUssS0FBSUMsSUFBSSxDQUFDRyxHQUFMLENBQVNWLEdBQVQsRUFBY0ksSUFBZCxDQUFtQixJQUFuQixDQUF5QixFQUEzRDtBQUNIOztBQUVjLE1BQU1PLEtBQU4sQ0FBWTtBQUV2QixTQUFPWixLQUFQLENBQWEsR0FBR1EsSUFBaEIsRUFBMkI7QUFDdkIsUUFBSUksS0FBSyxDQUFDQyxPQUFWLEVBQW1CO0FBQ2Y7QUFDSDs7QUFDREMsSUFBQUEsT0FBTyxDQUFDZCxLQUFSLENBQWMsR0FBR1EsSUFBakI7QUFDSDs7QUFDRCxTQUFPTyxLQUFQLENBQWEsR0FBR1AsSUFBaEIsRUFBMkI7QUFDdkIsUUFBSUksS0FBSyxDQUFDQyxPQUFWLEVBQW1CO0FBQ2Y7QUFDSDs7QUFDREMsSUFBQUEsT0FBTyxDQUFDQyxLQUFSLENBQWMsR0FBR1AsSUFBakI7QUFDSDs7QUFDSlEsRUFBQUEsTUFBTSxDQUFDVCxJQUFELEVBQXFCO0FBQ3ZCLFdBQU87QUFDVFAsTUFBQUEsS0FBSyxDQUFDLEdBQUdRLElBQUosRUFBVTtBQUNkSSxRQUFBQSxLQUFLLENBQUNaLEtBQU4sQ0FBWSxHQUFHUSxJQUFmO0FBQ0EsT0FIUTs7QUFJVE8sTUFBQUEsS0FBSyxDQUFDLEdBQUdQLElBQUosRUFBVTtBQUNkSSxRQUFBQSxLQUFLLENBQUNHLEtBQU4sQ0FBWVQsTUFBTSxDQUFDQyxJQUFELEVBQU9DLElBQVAsQ0FBbEI7QUFDQTs7QUFOUSxLQUFQO0FBUUg7O0FBQ0RTLEVBQUFBLElBQUksR0FBRztBQUNBTCxJQUFBQSxLQUFLLENBQUNDLE9BQU4sR0FBZ0IsSUFBaEI7QUFDSDs7QUExQnNCOzs7QUE2QjNCRCxLQUFLLENBQUNDLE9BQU4sR0FBZ0IsS0FBaEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBDb3B5cmlnaHQgMjAxOC0yMDIwIFRPTiBERVYgU09MVVRJT05TIExURC5cclxuICpcclxuICogTGljZW5zZWQgdW5kZXIgdGhlIFNPRlRXQVJFIEVWQUxVQVRJT04gTGljZW5zZSAodGhlIFwiTGljZW5zZVwiKTsgeW91IG1heSBub3QgdXNlXHJcbiAqIHRoaXMgZmlsZSBleGNlcHQgaW4gY29tcGxpYW5jZSB3aXRoIHRoZSBMaWNlbnNlLiAgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZVxyXG4gKiBMaWNlbnNlIGF0OlxyXG4gKlxyXG4gKiBodHRwOi8vd3d3LnRvbi5kZXYvbGljZW5zZXNcclxuICpcclxuICogVW5sZXNzIHJlcXVpcmVkIGJ5IGFwcGxpY2FibGUgbGF3IG9yIGFncmVlZCB0byBpbiB3cml0aW5nLCBzb2Z0d2FyZVxyXG4gKiBkaXN0cmlidXRlZCB1bmRlciB0aGUgTGljZW5zZSBpcyBkaXN0cmlidXRlZCBvbiBhbiBcIkFTIElTXCIgQkFTSVMsXHJcbiAqIFdJVEhPVVQgV0FSUkFOVElFUyBPUiBDT05ESVRJT05TIE9GIEFOWSBLSU5ELCBlaXRoZXIgZXhwcmVzcyBvciBpbXBsaWVkLlxyXG4gKiBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBUT04gREVWIHNvZnR3YXJlIGdvdmVybmluZyBwZXJtaXNzaW9ucyBhbmRcclxuICogbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuXHJcbiAqL1xyXG5cclxuLy8gQGZsb3dcclxuXHJcbmltcG9ydCB7IHRvTG9nIH0gZnJvbSBcIi4vdXRpbHNcIjtcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgUUxvZyB7XHJcbiAgICBlcnJvciguLi5hcmdzOiBhbnkpOiB2b2lkLFxyXG4gICAgZGVidWcoLi4uYXJnczogYW55KTogdm9pZCxcclxufVxyXG5cclxuZnVuY3Rpb24gdG9KU09OKHZhbHVlOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgdHJ5IHtcclxuICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkodG9Mb2codmFsdWUpKTtcclxuICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgcmV0dXJuIEpTT04uc3RyaW5naWZ5KGAke3ZhbHVlfWApO1xyXG4gICAgfVxyXG59XHJcblxyXG5mdW5jdGlvbiBzdHIoYXJnOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgY29uc3QgcyA9IHR5cGVvZiBhcmcgPT09ICdzdHJpbmcnID8gYXJnIDogdG9KU09OKGFyZyk7XHJcbiAgICByZXR1cm4gcy5zcGxpdCgnXFxuJykuam9pbignXFxcXG4nKS5zcGxpdCgnXFx0Jykuam9pbignXFxcXHQnKTtcclxufVxyXG5cclxuZnVuY3Rpb24gZm9ybWF0KG5hbWU6IHN0cmluZywgYXJnczogc3RyaW5nW10pIHtcclxuICAgIHJldHVybiBgJHtEYXRlLm5vdygpfVxcdCR7bmFtZX1cXHQke2FyZ3MubWFwKHN0cikuam9pbignXFx0Jyl9YDtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUUxvZ3Mge1xyXG4gICAgc3RhdGljIHN0b3BwZWQ6IGJvb2xlYW47XHJcbiAgICBzdGF0aWMgZXJyb3IoLi4uYXJnczogYW55KSB7XHJcbiAgICAgICAgaWYgKFFMb2dzLnN0b3BwZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmVycm9yKC4uLmFyZ3MpO1xyXG4gICAgfVxyXG4gICAgc3RhdGljIGRlYnVnKC4uLmFyZ3M6IGFueSkge1xyXG4gICAgICAgIGlmIChRTG9ncy5zdG9wcGVkKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5kZWJ1ZyguLi5hcmdzKTtcclxuICAgIH1cclxuXHRjcmVhdGUobmFtZTogc3RyaW5nKTogUUxvZyB7XHJcblx0ICAgIHJldHVybiB7XHJcblx0XHRcdGVycm9yKC4uLmFyZ3MpIHtcclxuXHRcdFx0XHRRTG9ncy5lcnJvciguLi5hcmdzKTtcclxuXHRcdFx0fSxcclxuXHRcdFx0ZGVidWcoLi4uYXJncykge1xyXG5cdFx0XHRcdFFMb2dzLmRlYnVnKGZvcm1hdChuYW1lLCBhcmdzKSk7XHJcblx0XHRcdH1cclxuXHRcdH07XHJcblx0fVxyXG5cdHN0b3AoKSB7XHJcbiAgICAgICAgUUxvZ3Muc3RvcHBlZCA9IHRydWU7XHJcbiAgICB9XHJcbn1cclxuXHJcblFMb2dzLnN0b3BwZWQgPSBmYWxzZTtcclxuIl19